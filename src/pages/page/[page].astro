---
import Layout from '../../layouts/BlogLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const allPosts = await getCollection('blog');
    const sortedPosts = allPosts.sort((a, b) => 
        new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    );
    
    const postsPerPage = 15;
    const totalPages = Math.ceil(sortedPosts.length / postsPerPage);
    
    return Array.from({ length: totalPages - 1 }).map((_, index) => {
        const pageNum = index + 2; // Start from page 2
        const start = (pageNum - 1) * postsPerPage;
        const end = start + postsPerPage;
        
        return {
            params: { page: pageNum.toString() },
            props: {
                posts: sortedPosts.slice(start, end),
                currentPage: pageNum,
                totalPages,
            },
        };
    });
}

const { posts, currentPage, totalPages } = Astro.props;
---

<Layout title="Welcome to My Blog." description="My personal blog">
	<div>
		<h2>Latest Blog Posts.</h2>
		<ol class="terminal-toc">
			{posts.map(blogPostEntry => (
				<li>
					<a href={`/blog/${blogPostEntry.slug}`}>
						{blogPostEntry.data.pubDate.toDateString()} - {blogPostEntry.data.title}
					</a>
				</li>
			))}
		</ol>

		<!-- Pagination controls -->
		<div class="pagination">
			<a href={currentPage === 2 ? '/' : `/page/${currentPage - 1}`}>Previous</a>
			<span>Page {currentPage} of {totalPages}</span>
			{currentPage < totalPages && (
				<a href={`/page/${currentPage + 1}`}>Next</a>
			)}
		</div>
	</div>
</Layout>

<style>
.pagination {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
    margin-top: 2rem;
}
</style>
--- 