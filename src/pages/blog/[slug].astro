---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
---
<Layout title={entry.data.title}>
  <div>
    <section>
      <div class="grid-container">
        <div class="item">
          <h1>{entry.data.title}</h1>
        </div>
        <div>
          {new Date(entry.data.pubDate).toLocaleDateString('en-us', {
            year: 'numeric',
            month: 'numeric',
            day: 'numeric',
        })}
        </div>
      </div>
      <div style="text-align: right;">
        {(() => {
          switch (entry.data.jpn) {
          case "#":   return null;
          default:    return <a href={entry.data.jpn} target="_blank">view in jpn</a>;
          }
      })()}
      </div>
    </section>
    <section>
      <figure>
        <img src={entry.data.image.url} alt={entry.data.image.alt}>
        <figcaption>{entry.data.image.alt}</figcaption>
        <p>Written by: {entry.data.author}</p>
      </figure>
    </section>
  </div>
  <Content />
  <hr>
</Layout>
<style>
  .grid-container {
display: flex; /* or inline-flex */
}
  .item {
flex-grow: 4; /* default 0 */
}
</style>